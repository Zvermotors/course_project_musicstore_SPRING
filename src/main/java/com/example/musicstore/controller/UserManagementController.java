package com.example.musicstore.controller;

import com.example.musicstore.models.User;
import com.example.musicstore.services.UserManagementService;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.*;

import java.math.BigDecimal;
import java.util.List;



//–≠—Ç–æ—Ç –∫–ª–∞—Å—Å UserManagementController —è–≤–ª—è–µ—Ç—Å—è –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–º –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
// —Å—Ç–∞—Ç—É—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.
// –û–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
@Slf4j
@Controller
@RequestMapping("/admin/user-management")
@RequiredArgsConstructor
public class UserManagementController {

    private final UserManagementService userManagementService;


    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
    //–ú–µ—Ç–æ–¥ displayUsers() —Å –∞–Ω–Ω–æ—Ç–∞—Ü–∏–µ–π @GetMapping:
    //–ü–æ–ª—É—á–∞–µ—Ç –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å userManagementService.findAllUsers()
    //–í—ã—á–∏—Å–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É:
    //activeUsersCount - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    //inactiveUsersCount - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    //usersWithBalanceCount - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –±–∞–ª–∞–Ω—Å–æ–º
    //–î–æ–±–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥–µ–ª—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —à–∞–±–ª–æ–Ω–µ admin/user-management
    //–õ–æ–≥–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ (–≤–∏–¥–Ω–æ –ø–æ @Slf4j –∏ System.out.println)
    @GetMapping
    public String displayUsers(Model model) {

            log.info("üéØ –ö–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤—ã–∑–≤–∞–Ω! üéØ");
            System.out.println("=== –ö–û–ù–¢–†–û–õ–õ–ï–† –†–ê–ë–û–¢–ê–ï–¢ ===");
        List<User> userList = userManagementService.findAllUsers();
             log.info("–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {}", userList.size());
        // –ü–æ–¥—Å—á–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        long activeUsersCount = userList.stream().filter(User::isActive).count();
        long inactiveUsersCount = userList.size() - activeUsersCount;
        long usersWithBalanceCount = userList.stream()
                .filter(user -> user.getBalance() != null && user.getBalance().compareTo(BigDecimal.ZERO) > 0)
                .count();

        model.addAttribute("userList", userList);
        model.addAttribute("activeUsersCount", activeUsersCount);
        model.addAttribute("inactiveUsersCount", inactiveUsersCount);
        model.addAttribute("usersWithBalanceCount", usersWithBalanceCount);

        return "admin/user-management";
    }

    //–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∞–∫—Ç–∏–≤–Ω—ã–π/–Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π)
    //–ú–µ—Ç–æ–¥ toggleUserStatus() —Å –∞–Ω–Ω–æ—Ç–∞—Ü–∏–µ–π @PostMapping("/toggle-status"):
    //–ü—Ä–∏–Ω–∏–º–∞–µ—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –Ω–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å –∏–∑ —Ñ–æ—Ä–º—ã
    //–í—ã–∑—ã–≤–∞–µ—Ç —Å–µ—Ä–≤–∏—Å userManagementService.updateUserActiveStatus() –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
    //–í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
    @PostMapping("/toggle-status")
    public String toggleUserStatus(@RequestParam Long userId,
                                   @RequestParam boolean isActive) {
        userManagementService.updateUserActiveStatus(userId, isActive);
        return "redirect:/admin/user-management";
    }
}